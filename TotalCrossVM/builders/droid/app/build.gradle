apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

 repositories { 
     mavenCentral()
     maven {
         url "http://maven.totalcross.com/artifactory/build"
         allowInsecureProtocol true
         credentials {
             username = 'builder'
             password = 's3nh4d0bu1ld3r'
         }
         // allows downloading artifacts without metadata (a pom file)
         metadataSources { artifact() }
     }
 }

def buildType // stores build type, debug or release

android {
    compileSdkVersion 31
    ndkVersion "21.4.7075529"

    aaptOptions {
        noCompress 'zip'
    }

    flavorDimensions "deploy"
    productFlavors {
        standard { dimension "deploy" }
        singleApk { dimension "deploy" }
    }

    defaultConfig {
        applicationId "totalcross.android"
        minSdkVersion 15
        targetSdkVersion 29
        versionCode 305419896
        versionName "!1.0!"
        multiDexEnabled true
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {}
    }
    
    gradle.taskGraph.whenReady { taskGraph ->
        if (taskGraph.hasTask(assembleRelease)) {
            buildType = 'release'
        } else if (taskGraph.hasTask(assembleDebug)) {
            buildType = 'debug'
        }
    }
    
    task assembleAssets(type:Zip) {
        // outputs.upToDateWhen { false }
        from ('${rootDir}/../../../TotalCrossSDK/dist/vm') {
            include 'TCBase.tcz'
            include 'TCUI.tcz'
        }
        from ('${rootDir}/../../../TotalCrossSDK/etc/fonts') {
            include 'TCFont.tcz'
        }
        from ('${rootDir}/../../../LitebaseSDK/dist/lib/') {
            include 'LitebaseLib.tcz'
        }
        entryCompression ZipEntryCompression.STORED
        baseName 'tcfiles'
        destinationDir file('src/main/assets') // directory that you want your archive to be placed in
    }

	assemble.mustRunAfter assembleAssets
    project.afterEvaluate{
	    applicationVariants.all { com.android.build.gradle.api.ApplicationVariant variant ->
		    	variant.assemble.dependsOn(['assembleAssets'])
		}
        android.applicationVariants.all { variant ->
            variant.assemble.doLast {
                if (variant.flavorName == 'standard') {
                    variant.outputs.each { output ->
                        def outputFile = output.outputFile
                        if (outputFile != null && outputFile.name.endsWith('.apk')) {
                            copy {
                                from outputFile
                                into "${rootDir}/../../../TotalCrossSDK/dist/vm/android"
                                rename { 'TotalCross.apk' }
                            }
                            copy {
                                from fileTree('build/intermediates/processed_res/' + variant.name +'/out').files
                                into "${rootDir}/../../../TotalCrossSDK/etc/launchers/android"
                                include 'resources-' + variant.name + '.ap_'
                                rename { 'resources.ap_' }
                            }
                        }
                    }
                } else {
                    variant.outputs.each { output ->
                        def outputFile = output.outputFile
                        if (outputFile != null && outputFile.name.endsWith('.apk')) {
                            copy {
                                from zipTree(outputFile).files
                                into "${rootDir}/../../../TotalCrossSDK/etc/tools/android"
                                include 'AndroidManifest.xml', 'resources.arsc'
                                rename { String fileName ->
                                    fileName.replace('.', '_' + variant.flavorName + '.')
                                }
                            }
                        }
                    }
                }
            }
        }
	}
}

dependencies {
    implementation project(":tcvm")
	// com.symbol.emdk must be excluded from compile and added as provided
    implementation fileTree(dir: 'libs', include: ['*.jar'], exclude: ['com.symbol.emdk-*.jar'])
    compileOnly fileTree(dir: 'libs', include: ['com.symbol.emdk-6.7.jar'])

    implementation 'com.google.android.gms:play-services-ads:' + googleGmsVersion
    implementation 'com.google.android.gms:play-services-maps:' + googleGmsVersion
    implementation 'com.google.android.gms:play-services-location:' + googleGmsVersion
    implementation 'com.google.firebase:firebase-core:' + googleGmsVersion
    implementation 'com.google.firebase:firebase-messaging:' + googleGmsVersion

    implementation 'com.github.cliftonlabs:json-simple:2.1.2'

    // Supports Android 4.0.3 and later (API level 15)
    implementation 'com.journeyapps:zxing-android-embedded:2.3.0@aar'

    // Supports Android 2.1 and later (API level 7), but not optimal for later Android versions.
    // If you only plan on supporting Android 4.0.3 and up, you don't need to include this.
    implementation 'com.journeyapps:zxing-android-legacy:2.3.0@aar'

    // Convenience library to launch the scanning Activities.
    // It automatically picks the best scanning library from the above two, depending on the
    // Android version and what is available.
    implementation 'com.journeyapps:zxing-android-integration:2.3.0@aar'

    // Version 3.0.x of zxing core contains some code that is not compatible on Android 2.2 and earlier.
    // This mostly affects encoding, but you should test if you plan to support these versions.
    // Older versions e.g. 2.2 may also work if you need support for older Android versions.
    implementation 'com.google.zxing:core:3.2.0'

    // Enables MultiDex. This allows the app to have more than 64k methods
    implementation 'androidx.multidex:multidex:2.0.0'

    // testImplementation 'junit:junit:4.12'
    // androidTestImplementation 'com.android.support.test:runner:1.0.2'
    // androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
   
    implementation(group: 'ScanditBarcodeScanner', name: 'ScanditBarcodeScanner', version: 'b1', ext: 'aar')

    implementation("androidx.appcompat:appcompat:1.4.0")
    implementation "androidx.core:core-ktx:+"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}